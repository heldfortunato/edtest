/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetofinaled;

import PacoteCanvas.Canvas;
import PacoteCanvas.Retangulo;
import Pilha.Pilha;
import javax.swing.JOptionPane;

/**
 *
 * @author clistenes
 */
public class TelaPilha extends javax.swing.JFrame {
    
    private Canvas canvas;
    private Pilha pilha;
    private Retangulo retangulo;
    
    int x, y;
    
    
    /**
     * Creates new form TelaPilha
     */
    public TelaPilha() {
        initComponents();
        canvas = new Canvas();
        canvas.setBounds(HEIGHT + 300, WIDTH + 5, 700, 700);
        this.add(canvas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTamPilha = new javax.swing.JTextField();
        btnInserir = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblTamMax = new javax.swing.JLabel();
        lblTam = new javax.swing.JLabel();
        lblElemRemovido = new javax.swing.JLabel();
        lblTopo = new javax.swing.JLabel();
        btnCriarPilha = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Tamanho da Pilha:");

        btnInserir.setText("Inserir Elemento");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover Elemento");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar Topo");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações da Pilha"));

        lblTamMax.setText("Tamanho Máximo:");

        lblTam.setText("Tamanho:");

        lblElemRemovido.setText("Elemento Removido:");

        lblTopo.setText("Topo:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTamMax)
                    .addComponent(lblTam)
                    .addComponent(lblElemRemovido)
                    .addComponent(lblTopo))
                .addGap(0, 69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTamMax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTopo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblElemRemovido)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        btnCriarPilha.setText("Criar Pilha");
        btnCriarPilha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarPilhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnCriarPilha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemover, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInserir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTamPilha, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(456, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTamPilha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCriarPilha, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(243, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        
        //se a inserção na pilha for bem sucedida ele pinta na tela;
        if (pilha.insereElem(Integer.parseInt(JOptionPane.showInputDialog("Valor que será empilhado ?")))) {
            
            //distancia entre os retangulos;
            y = (y = y - 30);
            
            //instanciando o retangulo e passando o atributos;
            retangulo = new Retangulo();
            retangulo.setCoordX(x);
            retangulo.setCoordY(y);
            retangulo.setValor(pilha.consultaElem());
            retangulo.setBasePx(100);
            retangulo.setAlturaPx(50);
            
            //adicionando retangulo no canvas;
            canvas.adicionar(retangulo);
            
            //gerando o retangulo na tela;
            canvas.paintPilha(canvas.getGraphics());
            
            //printando no label o tamanho da pilha;
            lblTam.setText(String.valueOf("Tamanho: " + pilha.tamanhoPilha()));
            
            //printando no label o Topo da pilha;
            lblTopo.setText(String.valueOf("Topo: " + pilha.consultaElem()));
            
            //printando o label elemento removido;
                lblElemRemovido.setText("Elemento Removido: null");
            
            } else {
                //exibe mensagem de erro;
                JOptionPane.showMessageDialog(null, "A pilha está cheia!", "Falha na inserção do Elemento", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_btnInserirActionPerformed

    private void btnCriarPilhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarPilhaActionPerformed

        //se a estrutura estiver vázia lancará uma mensagem de erro;
        if (canvas.Tamanho() == 0) {
                // instanciando a pilha com o tamanho passado pelo usuário;
                pilha = new Pilha(Integer.parseInt(txtTamPilha.getText()));
                
                //printando no label o tamanho máximo da pilha;
                lblTamMax.setText("Tamanho Máximo: " + txtTamPilha.getText());
                
                //printando no label o tamanho:
                lblTam.setText("Tamanho: " + pilha.tamanhoPilha());
                
                //printando no label topo da pilha;
                lblTopo.setText(String.valueOf("Topo: " + pilha.consultaElem()));
                
                //printando o label elemento removido;
                lblElemRemovido.setText("Elemento Removido: null");
                
                //passando posição que começará a pilha;
                x = 100;
                y = 650;
                
                //instancia retangulo e faço as alterações desejavei para pilha;
                retangulo = new Retangulo();
                                
            } else {
                //exibe uma mensagem de erro;
                JOptionPane.showMessageDialog(null, "Uma estrutura já foi criada. Remova todos os elementos"
                        + " da estrutura para criar outra !", "CRIAR PILHA", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_btnCriarPilhaActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        
        //confere se a fila está vazia
        if (!pilha.vazio()) {
                //criando uma variavel para armazenar o elemento removido;
                int aux;
                
                //remove elemento do canvas
                canvas.remover(pilha.getTopo());
                
                //remove elemento da pilha;
                aux = pilha.removeElem();
                
                //pinta todos os elementos que restão na tela;
                canvas.paintPilha(canvas.getGraphics());
                
                //diminui a distancia de um quadrado para outro;
                y = (y + 30);
                
                //atualiza o label elemento do topo;
                lblTopo.setText("Topo: " + pilha.consultaElem());
                
                //printando no label o tamanho:
                lblTam.setText("Tamanho: " + pilha.tamanhoPilha());
                
                //printando o label elemento removido;
                lblElemRemovido.setText("Elemento Removido: " + aux);
                
                
            } else {
                //exibe uma mensagem na tela se a pilha estiver vazia;
                JOptionPane.showMessageDialog(null, "A pilha está vazia.", "ERRO AO REMOVER ELEMENTO", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       
        //verifica se a pilha está vazia;
        if (!pilha.vazio()) {
                
                //mosta o valor no topo da pilha;
                JOptionPane.showMessageDialog(null, "O valor no Topo da Pilha é: " + pilha.consultaElem(), "CONSULTA ELEMENTO", JOptionPane.INFORMATION_MESSAGE);
            } else {
            
                //exibe uma mensagem de erro se a pilha estiver vazia;
                JOptionPane.showMessageDialog(null, "A pilha está vazia.", "CONSULTA ELEMENTO", JOptionPane.INFORMATION_MESSAGE);
            }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPilha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPilha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPilha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPilha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPilha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCriarPilha;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnRemover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblElemRemovido;
    private javax.swing.JLabel lblTam;
    private javax.swing.JLabel lblTamMax;
    private javax.swing.JLabel lblTopo;
    private javax.swing.JTextField txtTamPilha;
    // End of variables declaration//GEN-END:variables
}
